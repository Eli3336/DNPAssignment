@page "/ViewPosts"
@using Domain.Models
@using BlazorApp.Services.ClientInterfaces
@inject IPostService postService
@inject NavigationManager navMgr
@attribute [Authorize]
<h3>ViewPosts</h3>




@if (posts == null)
{
}
else if (!posts.Any())
{
    <p>No Todos to display </p>
}
else
{
    <table class="table">
        <thead>
        <tr>
            <th>Title</th>
            <th>Username</th>
            <th></th>
        </tr>
        </thead>
        <tbody>
        @foreach (var item in posts)
        {
            <tr>
                <td>@item.Title</td>
                <td>@item.User.UserName</td>
                <td>
                    <div class="oi oi-ellipses" @onclick="@(() => navMgr.NavigateTo($"/PostPage/{item.Title}"))"></div>
                </td>
            </tr>
        }
        </tbody>
    </table>
    <div class="button-row">
    <button @onclick="@(() => navMgr.NavigateTo("/CreatePost"))" class="acceptbtn">Create</button>
    </div>
}
@if (!string.IsNullOrEmpty(msg))
{
    <label style="color: red">@msg</label>
}

@code {
    private IEnumerable<Post>? posts;
    private string? UserName = "";
    private string? titleContains = "";
    private string msg = "";

    protected override async Task OnInitializedAsync()    {
        try
        {
            posts = await postService.GetAsync(UserName,titleContains);
        }
        catch (Exception e)
        {
            Console.WriteLine(e);
            msg = e.Message;
        }
    }
    
    
}